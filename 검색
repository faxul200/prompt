WITH input_code AS (
    -- 기준 타겟 코드 → UUID 찾기
    SELECT obj_uuid 
    FROM tb_item_mpng_d 
    WHERE obj_code = 'OFPP000020'
),
group_uuid AS (
    -- 기준 코드가 속한 그룹 UUID 찾기
    SELECT offer_group_uuid
    FROM tb_offer_group_rel_d
    WHERE offer_uuid IN (SELECT obj_uuid FROM input_code)
),
dpdc_from_group_code_as_target AS (
    -- 그룹코드가 trgt_uuid로 쓰인 dpdc 데이터 조회 (유형 4)
    SELECT 
        dpdc.base_uuid,
        dpdc.trgt_uuid,
        dpdc.dpdc_rel_uuid,
        dpdc.valid_start_dtm,
        dpdc.valid_end_dtm,
        'group_target' AS target_type,
        CASE 
            WHEN grp_check.offer_group_uuid IS NOT NULL THEN 'group'
            ELSE 'code'
        END AS base_type
    FROM tb_offer_dpdc_rel_d dpdc
    JOIN group_uuid g ON dpdc.trgt_uuid = g.offer_group_uuid
    LEFT JOIN tb_offer_group_rel_d grp_check 
        ON grp_check.offer_group_uuid = dpdc.base_uuid
),
dpdc_direct AS (
    -- 기준 코드가 직접 trgt_uuid인 경우 조회 (유형 1)
    SELECT 
        dpdc.base_uuid,
        dpdc.trgt_uuid,
        dpdc.dpdc_rel_uuid,
        dpdc.valid_start_dtm,
        dpdc.valid_end_dtm,
        'direct_target' AS target_type,
        CASE 
            WHEN grp_check.offer_group_uuid IS NOT NULL THEN 'group'
            ELSE 'code'
        END AS base_type
    FROM tb_offer_dpdc_rel_d dpdc
    JOIN input_code ic ON dpdc.trgt_uuid = ic.obj_uuid
    LEFT JOIN tb_offer_group_rel_d grp_check 
        ON grp_check.offer_group_uuid = dpdc.base_uuid
),
-- 타겟 기준: base가 일반 코드인 경우 (유형 1, 3)
code_targets AS (
    SELECT DISTINCT
        base_code.obj_code AS base_code,
        base_code.obj_name AS base_name,
        base_code.valid_end_dtm AS base_valid_end_dtm,
        trgt_code.obj_code AS target_code,
        trgt_code.obj_name AS target_name,
        trgt_code.valid_end_dtm AS target_valid_end_dtm,
        rel_code.obj_code  AS relation_code,
        rel_code.obj_name  AS relation_name,
        NULL AS group_code,
        NULL AS group_name,
        dpdc.valid_start_dtm,
        dpdc.valid_end_dtm
    FROM (
        SELECT * FROM dpdc_direct WHERE base_type = 'code'
        UNION ALL
        SELECT * FROM dpdc_from_group_code_as_target WHERE base_type = 'code'
    ) dpdc
    LEFT JOIN tb_item_mpng_d base_code ON dpdc.base_uuid = base_code.obj_uuid
    LEFT JOIN tb_item_mpng_d trgt_code ON dpdc.trgt_uuid = trgt_code.obj_uuid
    LEFT JOIN tb_item_mpng_d rel_code  ON dpdc.dpdc_rel_uuid = rel_code.obj_uuid
),
-- 타겟 기준: base가 그룹코드인 경우 (유형 2, 4)
group_targets AS (
    SELECT DISTINCT
        base_code.obj_code AS base_code,
        base_code.obj_name AS base_name,
        base_code.valid_end_dtm AS base_valid_end_dtm,
        trgt_code.obj_code AS target_code,
        trgt_code.obj_name AS target_name,
        trgt_code.valid_end_dtm AS target_valid_end_dtm,
        rel_code.obj_code  AS relation_code,
        rel_code.obj_name  AS relation_name,
        grp_code.obj_code  AS group_code,
        grp_code.obj_name  AS group_name,
        dpdc.valid_start_dtm,
        dpdc.valid_end_dtm
    FROM (
        SELECT * FROM dpdc_direct WHERE base_type = 'group'
        UNION ALL
        SELECT * FROM dpdc_from_group_code_as_target WHERE base_type = 'group'
    ) dpdc
    JOIN tb_offer_group_rel_d gt ON gt.offer_group_uuid = dpdc.base_uuid
    LEFT JOIN tb_item_mpng_d base_code ON gt.offer_uuid = base_code.obj_uuid
    LEFT JOIN tb_item_mpng_d trgt_code ON dpdc.trgt_uuid = trgt_code.obj_uuid
    LEFT JOIN tb_item_mpng_d rel_code  ON dpdc.dpdc_rel_uuid = rel_code.obj_uuid
    LEFT JOIN tb_item_mpng_d grp_code  ON dpdc.base_uuid = grp_code.obj_uuid
)
-- 최종 결과:타겟코드 기준 정렬+유효기간 포함
SELECT * FROM code_targets
UNION
SELECT * FROM group_targets
ORDER BY FIELD(LEFT(target_code,4),'OFPP','GROG'),target_code,relation_name,group_code,base_code
;
